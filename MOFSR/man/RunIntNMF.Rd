% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RunIntNMF.R
\name{RunIntNMF}
\alias{RunIntNMF}
\title{Run Integrative Non-negative Matrix Factorization (IntNMF) for Multi-Modality Data Integration}
\usage{
RunIntNMF(
  data = NULL,
  N.clust = NULL,
  max.iterations = 5,
  stability.count = 20,
  num.initializations = 30,
  use.nndsvd = TRUE,
  random.seed = TRUE,
  weight = NULL
)
}
\arguments{
\item{data}{A list of matrices where each element represents a different modality (e.g., RNA, protein, methylation). Each matrix should have rows as features and columns as samples.}

\item{N.clust}{Integer. Number of clusters to create from the IntNMF components (optional but recommended).}

\item{max.iterations}{Integer. Maximum number of iterations for the NMF algorithm (default: 200).}

\item{stability.count}{Integer. Count for stability in connectivity matrix (default: 20).}

\item{num.initializations}{Integer. Number of initializations of the random matrices (default: 30).}

\item{use.nndsvd}{Logical. Whether to use non-negative double singular value decomposition (NNDSVD) for initialization (default: TRUE).}

\item{random.seed}{Logical. Whether to use a random seed for initialization of the algorithm (default: TRUE).}

\item{weight}{Numeric vector. Weight for each data matrix in the list (default: equal weights).}
}
\value{
A data frame with the following columns:
  - Sample: The sample identifier.
  - Cluster: The assigned cluster number for each sample.
  - Cluster2: The assigned cluster label, prefixed by 'IntNMF' to indicate that the clustering was performed using IntNMF.
}
\description{
This function performs clustering analysis using Integrative Non-negative Matrix Factorization (IntNMF) to integrate multiple omics datasets. IntNMF is a powerful tool for capturing shared patterns across multiple datasets by decomposing them into components that reflect shared and individual structures.
}
\details{
This function uses IntNMF to integrate multiple data matrices and then assigns clusters to the samples based on the resulting components. IntNMF is particularly useful for capturing shared and individual variation in multi-omics data.

The function operates as follows:
1. Each data matrix is normalized to ensure non-negative values and scaled to unit variance.
2. IntNMF is performed using the IntNMF package to extract components that summarize the shared variation across different modalities.
3. The function returns a data frame containing the cluster assignment for each sample, along with additional information about the clustering process.
}
\examples{
# Example usage:
data1 <- matrix(rnorm(10000), nrow = 100, ncol = 100)
data2 <- matrix(rnorm(10000), nrow = 100, ncol = 100)
colnames(data1) <- colnames(data2) <- paste0("Sample", 1:100)
data_list <- list(data1, data2)

# Run IntNMF clustering
result <- RunIntNMF(data = data_list, N.clust = 3)

}
\references{
Chalise P, Fridley BL. Integrative clustering of multi-level 'omic data based on non-negative matrix factorization algorithm. PLoS One. 2017;12(5):e0176278. doi:10.1371/journal.pone.0176278.
            Chalise P, Raghavan R and Fridley B (2016). InterSIM: Simulation tool for multiple integrative 'omic datasets. Computer Methods and Programs in Biomedicine, 128:69-74.
}
\author{
Zaoqu Liu; Email: liuzaoqu@163.com
}
